{"version":3,"sources":["hooks/useInputState.js","reducers/todoReducer.js","hooks/useLocalStorageReducer.js","context/TodoContext.js","TodoForm.js","hooks/useToggleState.js","EditTodoForm.js","Todo.js","TodoList.js","TodoApp.js","App.js","index.js"],"names":["initialValue","useState","value","setValue","e","target","todoReducer","state","action","type","id","uuid","task","completed","filter","todo","map","newTask","useLocalStorageReducer","key","defaultVal","reducer","useReducer","val","JSON","parse","window","localStorage","getItem","String","dispatch","useEffect","setItem","stringify","TodoContext","createContext","DispatchContext","defaultTodos","TodoProvider","props","todos","Provider","children","TodoForm","useInputState","handleChange","reset","useContext","Paper","style","margin","padding","onSubmit","preventDefault","TextField","onChange","label","fullWidth","useToggle","initialVal","setState","toggle","EditTodoForm","toggleEdit","useInput","marginLeft","width","autoFocus","memo","isEditing","ListItem","height","Checkbox","tabIndex","checked","onClick","ListItemText","textDecoration","ListItemSecondaryAction","IconButton","aria-label","TodoList","length","List","Divider","TodoApp","backgroundColor","elevation","AppBar","color","position","Toolbar","Typography","Grid","container","justify","marginTop","item","xs","md","lg","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b00e6002.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nexport default (initialValue) => {\n  const [value, setValue] = useState(initialValue);\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n  const reset = () => {\n    setValue(\"\");\n  };\n  return [value, handleChange, reset];\n};\n","import React from \"react\";\nimport uuid from \"uuid\";\n\nconst todoReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD\":\n      return [...state, { id: uuid(), task: action.task, completed: false }];\n    case \"REMOVE\":\n      return state.filter((todo) => todo.id !== action.id);\n    case \"TOGGLE\":\n      return state.map((todo) =>\n        todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n      );\n    case \"UPDATE\":\n      return state.map((todo) =>\n        todo.id === action.id ? { ...todo, task: action.newTask } : todo\n      );\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;\n","import { useReducer, useEffect } from \"react\";\n\nconst useLocalStorageReducer = (key, defaultVal, reducer) => {\n  const [state, dispatch] = useReducer(reducer, defaultVal, () => {\n    let val;\n    try {\n      val = JSON.parse(window.localStorage.getItem(key) || String(defaultVal));\n    } catch (e) {\n      val = defaultVal;\n    }\n    return val;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, dispatch];\n};\n\nexport default useLocalStorageReducer;\n","import React, { createContext } from \"react\";\nimport todoReducer from \"../reducers/todoReducer\";\n// import useTodos from \"../hooks/useTodoState\";\nimport useLocalStorageReducer from \"../hooks/useLocalStorageReducer\";\n\nexport const TodoContext = createContext();\nexport const DispatchContext = createContext();\n\nconst defaultTodos = [\n  { id: 1, task: \"Walk Cats\", completed: false },\n  { id: 2, task: \"Walk Turtle\", completed: true },\n  { id: 3, task: \"Walk Husband\", completed: false },\n];\n\nexport const TodoProvider = (props) => {\n  const [todos, dispatch] = useLocalStorageReducer(\n    \"todos\",\n    defaultTodos,\n    todoReducer\n  );\n  // const [todos, dispatch] = useReducer(todoReducer, defaultTodos);\n  // const todoStuff = useTodos(defaultTodos);\n  return (\n    <TodoContext.Provider value={todos}>\n      <DispatchContext.Provider value={dispatch}>\n        {props.children}\n      </DispatchContext.Provider>\n    </TodoContext.Provider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport useInputState from \"./hooks/useInputState\";\nimport { DispatchContext } from \"./context/TodoContext\";\n\nconst TodoForm = () => {\n  const [value, handleChange, reset] = useInputState(\"\");\n  const dispatch = useContext(DispatchContext);\n  return (\n    <Paper style={{ margin: \"1rem 0\", padding: \"0 1rem\" }}>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          dispatch({ type: \"ADD\", task: value });\n          reset();\n        }}\n      >\n        <TextField\n          value={value}\n          onChange={handleChange}\n          margin=\"normal\"\n          label=\"Add New Todo\"\n          fullWidth\n        ></TextField>\n      </form>\n    </Paper>\n  );\n};\n\nexport default TodoForm;\n","import { useState } from \"react\";\n\nfunction useToggle(initialVal = false) {\n  const [state, setState] = useState(initialVal);\n\n  const toggle = () => {\n    setState(!state);\n  };\n  return [state, toggle];\n}\n\nexport default useToggle;\n","import React, { useContext } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport useInput from \"./hooks/useInputState\";\nimport { DispatchContext } from \"./context/TodoContext\";\n\nconst EditTodoForm = ({ id, task, toggleEdit }) => {\n  const dispatch = useContext(DispatchContext);\n  const [value, handleChange, reset] = useInput(task);\n\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        dispatch({ type: \"UPDATE\", newTask: value, id: id });\n        reset();\n        toggleEdit();\n      }}\n      style={{ marginLeft: \"1rem\", width: \"50%\" }}\n    >\n      <TextField\n        value={value}\n        onChange={handleChange}\n        margin=\"normal\"\n        autoFocus\n      ></TextField>\n    </form>\n  );\n};\n\nexport default EditTodoForm;\n","import React, { useContext, memo } from \"react\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport useToggle from \"./hooks/useToggleState\";\nimport EditTodoForm from \"./EditTodoForm\";\nimport { DispatchContext } from \"./context/TodoContext\";\n\nconst Todo = ({ id, task, completed }) => {\n  const dispatch = useContext(DispatchContext);\n  const [isEditing, toggle] = useToggle(false);\n  return (\n    <ListItem style={{ height: \"64px\" }}>\n      {isEditing ? (\n        <EditTodoForm id={id} task={task} toggleEdit={toggle} />\n      ) : (\n        <>\n          <Checkbox\n            tabIndex={-1}\n            checked={completed}\n            onClick={() => dispatch({ type: \"TOGGLE\", id: id })}\n          />\n          <ListItemText\n            style={{ textDecoration: completed ? \"line-through\" : \"none\" }}\n          >\n            {task}\n          </ListItemText>\n          <ListItemSecondaryAction>\n            <IconButton\n              aria-label=\"Delete\"\n              onClick={() => dispatch({ type: \"REMOVE\", id: id })}\n            >\n              <DeleteIcon />\n            </IconButton>\n            <IconButton aria-label=\"Edit\" onClick={() => toggle(isEditing)}>\n              <EditIcon />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(Todo);\n","import React, { useContext } from \"react\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Todo from \"./Todo\";\nimport { TodoContext } from \"./context/TodoContext\";\n\nconst TodoList = () => {\n  const todos = useContext(TodoContext);\n  if (todos.length)\n    return (\n      <Paper>\n        <List>\n          {todos.map((todo, id) => (\n            <>\n              <Todo {...todo} key={todo.id} />\n              {id < todos.length - 1 && <Divider />}\n            </>\n          ))}\n        </List>\n      </Paper>\n    );\n  return null;\n};\n\nexport default TodoList;\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport TodoForm from \"./TodoForm\";\nimport TodoList from \"./TodoList\";\nimport useTodoState from \"./hooks/useTodoState\";\nimport { TodoProvider } from \"./context/TodoContext\";\n\nconst TodoApp = () => {\n  // const initialTodos = [{ id: 1, task: \"Pet Michael\", completed: false }];\n\n  // const initialTodos = JSON.parse(window.localStorage.getItem(\"todos\")) || \"[]\";\n  // const { todos, addTodo, removeTodo, toggleTodo, updateTodo } = useTodoState(\n  //   initialTodos\n  // );\n\n  // const initialTodos = [\n  //   { id: 1, task: \"Walk Cats\", completed: false },\n  //   { id: 2, task: \"Walk Turtle\", completed: true },\n  //   { id: 3, task: \"Walk Husband\", completed: false },\n  // ];\n\n  return (\n    <Paper\n      style={{\n        padding: 0,\n        margin: 0,\n        height: \"100vh\",\n        backgroundColor: \"fafafa\",\n      }}\n      elevation={0}\n    >\n      <AppBar color=\"primary\" position=\"static\" style={{ height: \"64px\" }}>\n        <Toolbar>\n          <Typography color=\"inherit\">TODOS WITH HOOKS!</Typography>\n        </Toolbar>\n      </AppBar>\n      <Grid container justify=\"center\" style={{ marginTop: \"1rem\" }}>\n        <Grid item xs={11} md={8} lg={4}>\n          <TodoProvider>\n            <TodoForm />\n            <TodoList />\n          </TodoProvider>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default TodoApp;\n","import React from \"react\";\nimport TodoApp from \"./TodoApp\";\n\nfunction App() {\n  return <TodoApp />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}